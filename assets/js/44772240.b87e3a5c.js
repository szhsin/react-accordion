"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[709],{9947:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(8168),r=(n(3696),n(5680));const i={sidebar_position:2},o="AccordionItem",l={unversionedId:"api/components/AccordionItem",id:"api/components/AccordionItem",title:"AccordionItem",description:"| Prop | Type | Description |",source:"@site/docs/api/components/AccordionItem.md",sourceDirName:"api/components",slug:"/api/components/AccordionItem",permalink:"/react-accordion/api/components/AccordionItem",draft:!1,editUrl:"https://github.com/szhsin/react-accordion/tree/master/website/docs/api/components/AccordionItem.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"apiSidebar",previous:{title:"Accordion",permalink:"/react-accordion/api/components/Accordion"},next:{title:"ControlledAccordion",permalink:"/react-accordion/api/components/ControlledAccordion"}},d={},p=[],m={toc:p},g="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(g,(0,a.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"accordionitem"},"AccordionItem"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Prop"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"itemKey")),(0,r.yg)("td",{parentName:"tr",align:null},"string ","|"," number"),(0,r.yg)("td",{parentName:"tr",align:null},"Set an explicit key which can be used to expand or close item.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"initialEntered")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},"Make the accordion item expanded when initially mounted. This prop takes precedence over the ",(0,r.yg)("inlineCode",{parentName:"td"},"initialEntered")," prop of ",(0,r.yg)("inlineCode",{parentName:"td"},"Accordion")," component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"disabled")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},"If true, disable the accordion item and exclude it from keyboard navigation.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"header")),(0,r.yg)("td",{parentName:"tr",align:null},"node ","|"," function"),(0,r.yg)("td",{parentName:"tr",align:null},"Set item header. Support a function form which will receive item states.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"children")),(0,r.yg)("td",{parentName:"tr",align:null},"node ","|"," function"),(0,r.yg)("td",{parentName:"tr",align:null},"Set item content. Support a function form which will receive item states.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"headingTag")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Set heading tag; value can be ",(0,r.yg)("inlineCode",{parentName:"td"},"h1")," to ",(0,r.yg)("inlineCode",{parentName:"td"},"h6"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"headingProps")),(0,r.yg)("td",{parentName:"tr",align:null},"object"),(0,r.yg)("td",{parentName:"tr",align:null},"Set props and attributes on the heading element.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"buttonProps")),(0,r.yg)("td",{parentName:"tr",align:null},"object"),(0,r.yg)("td",{parentName:"tr",align:null},"Set props and attributes on the button element.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"contentProps")),(0,r.yg)("td",{parentName:"tr",align:null},"object"),(0,r.yg)("td",{parentName:"tr",align:null},"Set props and attributes on the content element.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"panelProps")),(0,r.yg)("td",{parentName:"tr",align:null},"object"),(0,r.yg)("td",{parentName:"tr",align:null},"Set props and attributes on the panel element.")))))}c.isMDXComponent=!0}}]);