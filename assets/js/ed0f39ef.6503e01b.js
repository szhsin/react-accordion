"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[939],{4360:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>l,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var c=i(2540),r=i(8453);const d={sidebar_position:2},n="useAccordionItemEffect",o={id:"api/hooks/useAccordionItemEffect",title:"useAccordionItemEffect",description:"Parameter object",source:"@site/docs/api/hooks/useAccordionItemEffect.md",sourceDirName:"api/hooks",slug:"/api/hooks/useAccordionItemEffect",permalink:"/react-accordion/api/hooks/useAccordionItemEffect",draft:!1,unlisted:!1,editUrl:"https://github.com/szhsin/react-accordion/tree/master/website/docs/api/hooks/useAccordionItemEffect.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"apiSidebar",previous:{title:"useAccordion",permalink:"/react-accordion/api/hooks/useAccordion"},next:{title:"useAccordionItem",permalink:"/react-accordion/api/hooks/useAccordionItem"}},s={},h=[{value:"Parameter object",id:"parameter-object",level:2},{value:"Return object",id:"return-object",level:2}];function a(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"useaccordionitemeffect",children:"useAccordionItemEffect"})}),"\n",(0,c.jsx)(t.h2,{id:"parameter-object",children:"Parameter object"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Prop"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"itemKey"})}),(0,c.jsx)(t.td,{children:"string | number"}),(0,c.jsx)(t.td,{children:"An explicit key which can be used to expand or close item."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"initialEntered"})}),(0,c.jsx)(t.td,{children:"boolean"}),(0,c.jsxs)(t.td,{children:["Make the accordion item expanded when initially mounted. This prop takes precedence over the ",(0,c.jsx)(t.code,{children:"initialEntered"})," prop of ",(0,c.jsx)(t.code,{children:"Accordion"})," component."]})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"disabled"})}),(0,c.jsx)(t.td,{children:"boolean"}),(0,c.jsx)(t.td,{children:"Whether the accordion item is disabled."})]})]})]}),"\n",(0,c.jsx)(t.h2,{id:"return-object",children:"Return object"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Prop"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"itemRef"})}),(0,c.jsx)(t.td,{children:"object"}),(0,c.jsxs)(t.td,{children:["A React ",(0,c.jsx)(t.code,{children:"ref"})," object to be attached to the item element."]})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"state"})}),(0,c.jsx)(t.td,{children:"TransitionState"}),(0,c.jsx)(t.td,{children:"The item state."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"toggle"})}),(0,c.jsx)(t.td,{children:"(toEnter?: boolean) => void"}),(0,c.jsx)(t.td,{children:"A function to toggle the item state."})]})]})]}),"\n",(0,c.jsx)(t.admonition,{title:"NOTE",type:"caution",children:(0,c.jsx)(t.p,{children:"As its name suggests, this hook is not pure and should be used only once in each accordion item."})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);