"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[952],{8013:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var i=n(2540),d=n(8453);const c={sidebar_position:1},o="Accordion",r={id:"api/components/Accordion",title:"Accordion",description:"| Prop | Type | Description |",source:"@site/docs/api/components/Accordion.md",sourceDirName:"api/components",slug:"/api/components/Accordion",permalink:"/react-accordion/api/components/Accordion",draft:!1,unlisted:!1,editUrl:"https://github.com/szhsin/react-accordion/tree/master/website/docs/api/components/Accordion.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",next:{title:"AccordionItem",permalink:"/react-accordion/api/components/AccordionItem"}},s={},a=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"accordion",children:"Accordion"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Prop"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"allowMultiple"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"Allow multiple accordion items to expand at once."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"initialEntered"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"Make all accordion items expanded when initially mounted."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mountOnEnter"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsxs)(t.td,{children:["Lazily mount ",(0,i.jsx)(t.code,{children:"children"})," of accordion items until they are expanded. Use this option if you don't need to server-side render accordion item contents."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"unmountOnExit"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsxs)(t.td,{children:["Unmount ",(0,i.jsx)(t.code,{children:"children"})," of accordion items after they are collapsed."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"transition"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/szhsin/react-accordion/blob/7eddacda0928b23bde05ad2299d9b5e27efd4995/types/utils/constants.d.ts#L16",children:"View on GitHub"})}),(0,i.jsx)(t.td,{children:"Enable or disable transition. Accept a single boolean value or each individual transition stage in an object."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"transitionTimeout"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/szhsin/react-accordion/blob/7eddacda0928b23bde05ad2299d9b5e27efd4995/types/utils/constants.d.ts#L32",children:"View on GitHub"})}),(0,i.jsx)(t.td,{children:'Set transition duration. Accept a single number or individual "enter" or "exit" stage in an object.'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"onStateChange"})}),(0,i.jsx)(t.td,{children:"(event: { key: ItemKey; current: TransitionState }) => void"}),(0,i.jsx)(t.td,{children:"Event to notify state changes in any accordion items."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);